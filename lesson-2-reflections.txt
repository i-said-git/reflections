What happens when you initializea repository? Why do you need to do it?

When you initialize a repository it let's git know that you want to keep
track of the file in the current directory. You need to do this so that
git knows which files and folders you want to track.

------------

How is the staging area different from the working directory and the 
repository? What value do you think it offers?

The difference is that the working directory is simply the local directory
on your computer that you're going to turn into a repository and a repository
is different because it's where actual commited changes to files are saved.
Staging area is valuable because it gives you a place to put files before
they are ready to be committed.

------------

How can you use the staging area to make sure you have one commit per logical
change?

After every logical change add the file that you changed to the staging area.

------------

What are some situation when branches would be helpful in keeping your history
organized? How would branches help?

Branches would be helpful in keeping your project organized in a situation
when you want to take your project/code into a direction that you're not
sure of? Branches can be helpful because if you don't end up wanting to move forward with the branch you can just ditch all together without affecting
the rest of the project.

-------------

How do the diagrams help you visualize the branch structure?

The visualisations help because they make it very clear which commits are a
part of which specific branch.

------------

What are the pros and cons of Git's automatic merging vs. always doing the
merges manually?

The pros are that it's faster and that it won't automatically merge the two
branches if there are conflicts that will cause your code to run.
